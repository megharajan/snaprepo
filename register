SignUp.java

package com.example.friendbook;

import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import android.net.Uri;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.provider.MediaStore;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.util.Base64;
import android.util.Log;
import android.util.Patterns;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.Toast;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;

public class SignUp extends Activity {
	
	EditText ed_fname, ed_lname, ed_dob, ed_phone, ed_email, ed_pass;
	RadioButton rb_female;
	ImageView iv_dp;
	Button bt_reg;
	SharedPreferences sh;
	
	private static final int CAMERA_PIC_REQUEST = 0, GALLERY_CODE = 201;
	private Uri mImageCaptureUri;
	String path = "", encodedImage = "";
	Uri imageUri = null;
	
	Calendar myCalendar = Calendar.getInstance();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_sign_up);
		
		sh = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
		
		ed_fname = (EditText) findViewById(R.id.ed_fname);
		ed_lname = (EditText) findViewById(R.id.ed_lname);
		ed_dob = (EditText) findViewById(R.id.ed_dob);
		ed_phone = (EditText) findViewById(R.id.ed_phone);
		ed_email = (EditText) findViewById(R.id.ed_email);
		ed_pass = (EditText) findViewById(R.id.ed_pas_reg);
		rb_female = (RadioButton) findViewById(R.id.rb_female);
		iv_dp = (ImageView) findViewById(R.id.iv_reg_dp);
		bt_reg = (Button) findViewById(R.id.bt_signup);
		
		bt_reg.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				String fname, lname, gender = "male", dob, phone, email, password;
				fname = ed_fname.getText().toString();
				lname = ed_lname.getText().toString();
				if (rb_female.isChecked())
					gender = "female";
				dob = ed_dob.getText().toString();
				phone = ed_phone.getText().toString();
				email = ed_email.getText().toString();
				password = ed_pass.getText().toString();
				if (encodedImage.equals(""))
					encodedImage = "no image";
				
//				Toast.makeText(getApplicationContext(), "DOB : " + dob, Toast.LENGTH_LONG).show();
				
				int flg = 0;
				if (fname.equals("")) {
					flg++;
					ed_fname.setError("First name");
				}
				if (lname.equals("")) {
					flg++;
					ed_lname.setError("Last name");
				}
				if (dob.equals("")) {
					flg++;
					ed_dob.setError("Date of birth");
				}
				if (phone.equals("") || phone.length() != 10) {
					flg++;
					ed_phone.setError("Phone number");
				}
				if (email.equals("") || (!Patterns.EMAIL_ADDRESS.matcher(email).matches())) {
					flg++;
					ed_email.setError("Valid email id");
				}
				if (password.equals("")) {
					flg++;
					ed_pass.setError("Password");
				}
				
				if (password.length() < 8) {
					flg++;
					ed_pass.setError("Atleast 8 charecters");
				}
				
				if (flg == 0) {
					try {
						String namespace = "http://dbcon/";
						String method = "register";
						SoapObject sop = new SoapObject(namespace, method);
						sop.addProperty("fname", fname);
						sop.addProperty("lname", lname);
						sop.addProperty("gender", gender);
						sop.addProperty("dob", dob);
						sop.addProperty("phone", phone);
						sop.addProperty("email", email);
						sop.addProperty("pass", password);
						sop.addProperty("lati", LocationService.lati);
						sop.addProperty("longi", LocationService.logi);
						sop.addProperty("dp", encodedImage);
						
						SoapSerializationEnvelope senv = new SoapSerializationEnvelope(SoapEnvelope.VER11);
						senv.setOutputSoapObject(sop);
						
						HttpTransportSE htp = new HttpTransportSE(sh.getString("url", ""));
						htp.call(namespace + method, senv);
						
						String result = senv.getResponse().toString();
//						Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();
						
						if (result.equals("na")) {
							Toast.makeText(getApplicationContext(), "Failed.!", Toast.LENGTH_LONG).show();
						} else if (result.equals("exist")) {
							ed_email.setError("Choose another");
							Toast.makeText(getApplicationContext(), "Email id already exist, train again.!", Toast.LENGTH_LONG).show();
						} else {
							Toast.makeText(getApplicationContext(), "Success.!", Toast.LENGTH_LONG).show();
							startActivity(new Intent(getApplicationContext(), Login.class));
						}
					} catch (Exception e) {
						Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_LONG).show();
					}
				}
			}
		});
		
		iv_dp.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				selectImageOption();
			}
		});
		
		final DatePickerDialog.OnDateSetListener date = new DatePickerDialog.OnDateSetListener() {

		    @Override
		    public void onDateSet(DatePicker view, int year, int monthOfYear,
		            int dayOfMonth) {
		        // TODO Auto-generated method stub
		        myCalendar.set(Calendar.YEAR, year);
		        myCalendar.set(Calendar.MONTH, monthOfYear);
		        myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
		        updateLabel();
		    }

		};
		
		ed_dob.setOnClickListener(new View.OnClickListener() {

		    @Override
		    public void onClick(View v) {
		        new DatePickerDialog(SignUp.this, date, myCalendar
		                .get(Calendar.YEAR), myCalendar.get(Calendar.MONTH),
		                myCalendar.get(Calendar.DAY_OF_MONTH)).show();
		    }
		});
	}
	
	private void updateLabel() {
	    String myFormat = "yyyy-MM-dd"; //In which you need put here
	    SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.US);

	    ed_dob.setText(sdf.format(myCalendar.getTime()));
	}
	
	private void selectImageOption() {
		final CharSequence[] items = {"Capture Photo", "Choose from Gallery", "Cancel"};

		AlertDialog.Builder builder = new AlertDialog.Builder(SignUp.this);
		builder.setTitle("Add Photo!");
		builder.setItems(items, new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int item) {

				if (items[item].equals("Capture Photo")) {
					Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
					//intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
					startActivityForResult(intent, CAMERA_PIC_REQUEST);

				} else if (items[item].equals("Choose from Gallery")) {
					Intent i = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
					startActivityForResult(i, GALLERY_CODE);

				} else if (items[item].equals("Cancel")) {
					dialog.dismiss();
				}
			}
		});
		builder.show();
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == GALLERY_CODE && resultCode == RESULT_OK && null != data) {

			mImageCaptureUri = data.getData();
			System.out.println("Gallery Image URI : " + mImageCaptureUri);
			//   CropingIMG();

			Uri uri = data.getData();
			Log.d("File Uri", "File Uri: " + uri.toString());
			// Get the path
			//String path = null;
			try {
				path = FileUtils.getPath(this, uri);
//				Toast.makeText(getApplicationContext(), "path : " + path, Toast.LENGTH_LONG).show();

				File fl = new File(path);
				int ln = (int) fl.length();
				byte[] byteArray = null;

				InputStream inputStream = new FileInputStream(fl);
				ByteArrayOutputStream bos = new ByteArrayOutputStream();
				byte[] b = new byte[ln];
				int bytesRead = 0;

				while ((bytesRead = inputStream.read(b)) != -1) {
					bos.write(b, 0, bytesRead);
				}
				inputStream.close();
				byteArray = bos.toByteArray();

				Bitmap bit = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length);
				iv_dp.setImageBitmap(bit);

				String str = Base64.encodeToString(byteArray, Base64.DEFAULT);
				encodedImage = str;
			} catch (Exception e) {
				Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_LONG).show();
			}
		} else if (requestCode == CAMERA_PIC_REQUEST && resultCode == Activity.RESULT_OK) {

			try {
				Bitmap thumbnail = (Bitmap) data.getExtras().get("data");
				ByteArrayOutputStream baos = new ByteArrayOutputStream();
				thumbnail.compress(Bitmap.CompressFormat.JPEG, 100, baos);
				iv_dp.setImageBitmap(thumbnail);
				String imageurl = getRealPathFromURI(imageUri);

//                tv1.setText(imageurl.substring(imageurl.lastIndexOf("/") + 1));

//				Toast.makeText(getApplicationContext(), imageurl, Toast.LENGTH_SHORT).show();

				File file = new File(imageurl);
				int ln = (int) file.length();
				byte[] byteArray = null;
				try {
					InputStream inputStream = new FileInputStream(file);
					ByteArrayOutputStream bos = new ByteArrayOutputStream();
					byte[] b = new byte[ln];
					int bytesRead = 0;

					while ((bytesRead = inputStream.read(b)) != -1) {
						bos.write(b, 0, bytesRead);
					}
					inputStream.close();
					byteArray = bos.toByteArray();
				} catch (IOException e) {
					Toast.makeText(this, "String :" + e.getMessage().toString(), Toast.LENGTH_LONG).show();
				}
				String str = Base64.encodeToString(byteArray, Base64.DEFAULT);

				encodedImage = str;

			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

	String getRealPathFromURI(Uri contentUri) {
		String[] proj = {MediaStore.Images.Media.DATA};
		Cursor cursor = managedQuery(contentUri, proj, null, null, null);
		int column_index = cursor
				.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
		cursor.moveToFirst();
		return cursor.getString(column_index);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.sign_up, menu);
		return true;
	}

}

activity_signup.xml

<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".SignUp" >

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical" >
        
        <TableRow
	        android:id="@+id/tableRow1"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_fname"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:hint="First name"
	            android:inputType="textPersonName" >
	
	            <requestFocus />
	        </EditText>
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow2"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_lname"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:hint="Last name"
	            android:inputType="textPersonName" />
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow3"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	        
	        <RadioGroup
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:orientation="horizontal" >
	            
	            <RadioButton
	                android:id="@+id/rb_male"
	                android:layout_width="wrap_content"
	                android:layout_height="wrap_content"
	                android:text="Male" />
	            
	            <RadioButton
	                android:id="@+id/rb_female"
	                android:layout_width="wrap_content"
	                android:layout_height="wrap_content"
	                android:text="Female" />
	        </RadioGroup>
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow4"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_dob"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:hint="DOB"
				android:clickable="true"
				android:editable="false"
	            android:inputType="date" />
	
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow5"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_phone"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:hint="Phone number"
	            android:inputType="phone" />
	
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow6"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_email"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:hint="Email"
	            android:inputType="textEmailAddress" />
	
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow7"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <EditText
	            android:id="@+id/ed_pas_reg"
	            android:hint="Password"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:ems="10"
	            android:inputType="textPassword" />
	
	    </TableRow>
	    
	    <TableRow
	        android:id="@+id/tableRow7"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <ImageView
	            android:id="@+id/iv_reg_dp"
	            android:layout_width="75dp"
	            android:layout_height="75dp"
	            android:src="@drawable/people"
	            android:ems="10" />
	
	    </TableRow>
	
	    <TableRow
	        android:id="@+id/tableRow8"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        android:gravity="center"
	        android:layout_marginTop="7dp" >
	
	        <Button
	            android:id="@+id/bt_signup"
	            style="?android:attr/buttonStyleSmall"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:text="SignUp" />
	
	    </TableRow>
    </LinearLayout>

</ScrollView>
